/*******************************************************************************
 * Copyright (c) 2015 Kiel University and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    spoenemann - initial API and implementation
 *******************************************************************************/
package org.eclipse.elk.alg.mrtree

import org.eclipse.elk.alg.mrtree.TreeLayoutProvider
import org.eclipse.elk.core.math.ElkPadding
import org.eclipse.elk.core.options.PortAlignment

/**
 * Declarations for the ELK Tree layout algorithm.
 */
bundle {
    metadataClass options.MrTreeMetaDataProvider
    idPrefix org.eclipse.elk.mrtree
}

algorithm mrtree(TreeLayoutProvider) {
    label "ELK Mr. Tree"
    description 
        "Tree-based algorithm provided by the Eclipse Layout Kernel. Computes a spanning tree of
        the input graph and arranges all nodes according to the resulting parent-children
        hierarchy. I pity the fool who doesn't use Mr. Tree Layout."
    metadataClass options.MrTreeOptions
    category org.eclipse.elk.tree
    features disconnected
    preview images/mrtree_layout.png
    supports org.eclipse.elk.padding = new ElkPadding(20)
    supports org.eclipse.elk.spacing.nodeNode = 20
    supports org.eclipse.elk.aspectRatio = 1.6f
    supports org.eclipse.elk.priority = 1
    supports org.eclipse.elk.separateConnectedComponents = true 
    supports org.eclipse.elk.debugMode
    supports weighting
    supports searchOrder
    supports org.eclipse.elk.portConstraints
    // options handled by the common node label, port label and node size processing
    supports org.eclipse.elk.nodeSize.constraints
    supports org.eclipse.elk.nodeSize.options
    supports org.eclipse.elk.nodeLabels.placement
    supports org.eclipse.elk.nodeLabels.padding
    supports org.eclipse.elk.portLabels.placement
    supports org.eclipse.elk.portLabels.nextToPortIfPossible
    supports org.eclipse.elk.port.borderOffset = 0
    supports org.eclipse.elk.portAlignment.^default = PortAlignment.JUSTIFIED
    supports org.eclipse.elk.portAlignment.north
    supports org.eclipse.elk.portAlignment.south
    supports org.eclipse.elk.portAlignment.west
    supports org.eclipse.elk.portAlignment.east
}

option weighting: OrderWeighting {
    label "Weighting of Nodes"
    description "Which weighting to use when computing a node order."
    default = OrderWeighting.DESCENDANTS
    targets parents
}

option searchOrder: TreeifyingOrder {
    label "Search Order"
    description "Which search order to use when computing a spanning tree."
    default = TreeifyingOrder.DFS
    targets parents
}
