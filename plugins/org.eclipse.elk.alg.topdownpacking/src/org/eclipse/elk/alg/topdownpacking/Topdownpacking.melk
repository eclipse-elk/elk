/*******************************************************************************
 * Copyright (c) 2022 Kiel University and others.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 * 
 * SPDX-License-Identifier: EPL-2.0  
 *******************************************************************************/
package org.eclipse.elk.alg.topdownpacking

import org.eclipse.elk.alg.topdownpacking.TopdownpackingLayoutProvider
import org.eclipse.elk.core.options.TopdownNodeTypes
import org.eclipse.elk.alg.topdownpacking.NodePlacementStrategy
import org.eclipse.elk.alg.topdownpacking.WhitespaceEliminationStrategy

bundle {
    metadataClass options.TopdownpackingMetaDataProvider
    idPrefix org.eclipse.elk.topdownpacking
}

algorithm topdownpacking(TopdownpackingLayoutProvider) {
    label "ELK Top-down Packing"
    description "An algorithm for placing boxes of fixed sizes. Expands boxes horizontally to fill empty 
                 whitespace. This algorithm can be used standalone or specifically for 
                 {@link CoreOptions.TOPDOWN_LAYOUT}. In this use case it should be set for nodes whose
                 {@link CoreOptions.TOPDOWN_NODE_TYPE} is set to {@link TopdownNodeTypes.PARALLEL_NODE}.
                 This allows topdown layout to give children larger sizes based on their number of children."
    metadataClass options.TopdownpackingOptions
    supports org.eclipse.elk.padding
    supports org.eclipse.elk.spacing.nodeNode
    supports org.eclipse.elk.topdown.hierarchicalNodeWidth
    supports org.eclipse.elk.topdown.hierarchicalNodeAspectRatio
    supports org.eclipse.elk.topdownLayout
    supports org.eclipse.elk.topdown.nodeType = TopdownNodeTypes.PARALLEL_NODE
    
    supports nodePlacement.strategy
    supports whitespaceElimination.strategy
}

group nodePlacement {
    
    option strategy: NodePlacementStrategy {
        label "Node placement strategy"
        description "Strategy for node placement. The strategy determines the size of the resulting graph."
        default = NodePlacementStrategy.LEFT_RIGHT_TOP_DOWN_NODE_PLACER
        targets parents
    }
}

group whitespaceElimination {
    
    option strategy: WhitespaceEliminationStrategy {
        label "Whitespace elimination strategy"
        description "Strategy for whitespace elimination."
        default = WhitespaceEliminationStrategy.BOTTOM_ROW_EQUAL_WHITESPACE_ELIMINATOR
        targets parents
    }
}
